#![feature(min_specialization)]
#![feature(associated_type_defaults)]
#![feature(generic_const_exprs)]
mod math_traits;
mod mat_struct;
mod vec_struct;
mod funcs;
mod macros;

use vec_struct::*;
use mat_struct::*;
use math_traits::*;

// use crate::math_traits::Mathable;

fn main() {
	println!("Hello, world!");

	{
		let mat = Matrix::from([
			[10., 19.,  0., 19.,  7., 13., 14.,  3., 19.,  0., 15.,  0.,  3., 20., 17., 14.],
			[17.,  6., 19.,  1., 14., 19., 15., 11., 14., 19., 11., 10., 15., 18., 11., 20.],
			[ 8., 16., 11., 16.,  9.,  6., 12.,  6., 17.,  0.,  9.,  1., 10.,  7., 12., 19.],
			[10., 20.,  7., 11.,  6., 18.,  7.,  1., 19.,  9., 11., 11., 13., 10.,  4.,  8.],
			[19.,  6., 11.,  0., 11., 19.,  0., 13., 12., 13.,  7., 16.,  6.,  0., 15., 11.],
			[ 5., 14., 11.,  8.,  2.,  6.,  4.,  8., 12., 13.,  8., 14., 10., 13.,  8., 15.],
			[16., 17.,  1., 10.,  7., 13., 14., 14.,  2.,  0.,  3., 15., 14.,  0., 20., 16.],
			[ 5., 19., 16.,  4.,  8.,  1., 14., 13., 10., 12., 18.,  5.,  2.,  9., 20.,  8.],
			[ 5., 20., 11.,  4.,  7.,  3., 20.,  6.,  2.,  7., 14.,  1., 20., 16.,  8.,  1.],
			[ 3.,  9.,  6., 13., 14.,  9.,  9., 18.,  5., 17., 11.,  5.,  6., 14., 20.,  8.],
			[ 7.,  6.,  3., 19.,  8., 18., 14.,  3., 10.,  5., 16.,  0.,  5.,  5., 15.,  4.],
			[18.,  8., 15., 13., 16., 13.,  6.,  7., 18.,  8.,  0., 15.,  1., 19., 10.,  9.],
			[ 1.,  3.,  3., 11.,  0., 19., 19., 17.,  1.,  2., 13.,  9., 15., 18., 10., 13.],
			[15., 13.,  6.,  7.,  7.,  7., 11.,  0.,  5., 20., 17., 17., 17., 12., 10., 20.],
			[ 0., 14., 12., 13., 20.,  5.,  1., 13.,  1., 20., 14.,  7., 12., 10.,  4.,  9.],
			[15.,  3.,  5., 20., 12., 10., 20.,  0., 17., 12., 19., 12., 16.,  1.,  6., 15.],
		]);
		println!("{}\n\n", mat.row_echelon());
	}
	{
		let mat = Matrix::from([
			[  3.297,  10.771,  7.343, -13.483,  -5.669,   3.356,  10.281,  8.780,   3.969, -11.486,  18.909,  -2.019,  15.443, -11.457,   4.334,  -9.783],
			[-17.066, -13.634, 16.361,  16.494,  12.305,  -9.247, -16.252, -1.790,   0.725,  11.329,  15.476,   6.230,  17.587,  15.421,  -4.360,   7.659],
			[  5.698,  13.646, 18.661, -18.465, -16.280, -17.749,   6.978, -3.379,  16.380,   4.930, -10.889,  -9.598,  17.207,  14.482, -17.120, -17.241],
			[  2.759,   5.146, 14.725,   9.313,  18.608,  15.390,   1.244, -1.942,   9.442,  15.725,  10.258,   8.852,  -4.086,  -7.612, -10.998,  -1.438],
			[-18.739,  -1.970, -6.427,  -7.329,  -1.272, -13.700, -19.107, -8.804,   7.795, -10.706,  -0.415,  -4.690,   7.725, -19.280,  -7.203,  -5.495],
			[-15.753,  -3.301, 17.109,   3.115,  -1.952,  15.310,   8.767,  6.956,  -5.188, -12.998,  -7.414,  -2.861,  18.685, -14.054, -15.825,  17.411],
			[  5.566, -11.970, -8.474,  13.147, -18.495, -16.687,  -1.091,  1.085,  -5.306,  11.110,  17.241,  15.764, -17.034,  -2.985,  10.975, -15.021],
			[ -9.320,  -9.088,  9.690,   2.534,  -6.959,  -3.548,   1.336, -8.383, -17.083, -11.964,  -5.167,   3.805,  18.752,  -7.404, -19.143, -16.891],
			[ -6.526,  -9.576, 12.524,  15.881,  13.476,  15.206,  -1.435,  3.785, -13.585,  -3.964,  -0.663,  19.692,   9.187,  10.991,   4.161,   3.737],
			[-11.185,   2.217, 18.594,  -2.059,  10.535,  15.714,  -3.228, 10.404,  -0.095, -16.430,  19.729,   4.343,  -6.656, -14.161, -15.248,   6.520],
			[-16.211,   2.097,  9.542,  -0.182,   3.753,  19.861, -16.467,  2.571, -10.363,   2.728,  17.258,   9.873,  -5.138, -11.789,  -2.680, -15.655],
			[ 17.577,  12.129,  8.153,  -2.069,  17.292, -10.693, -13.972,  6.081,  -1.808,  -7.345,  -3.037,  10.089,  -8.560,  -8.812,   4.490,  -1.627],
			[ -3.861, -14.853, -9.898,  -4.290, -11.443,   4.821,  -2.440, -6.437,   1.236, -12.640,  -7.874,  -3.103,   7.688, -19.440, -16.384, -10.472],
			[ 14.750,  10.630,  1.465, -11.188,   4.926, -16.322,  17.159,  9.953, -10.967,  -7.585,  -2.798,   4.626,  14.688,  15.255,  14.064, -19.450],
			[-18.864,   1.653, -4.380,  18.451, -15.954,  -2.493,  -7.583,  5.955,   7.547,   5.297,  16.378,  -3.011,   8.462, -10.165,  18.877, -15.969],
			[ 10.007, -12.537,  5.924, -15.563,  -4.744, -12.288, -17.929, -5.283,   0.355, -15.036,   0.010, -19.896,  -8.546,  16.477,  17.448, -19.997],
		]);
		println!("{}\n\n", mat.row_echelon());
	}
}
